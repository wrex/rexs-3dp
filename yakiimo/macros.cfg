
[gcode_macro PRINT_START]
#   Called from slicer as follows:
#     print_start EXTRUDER={first_layer_temperature[initial_extruder] \
#         + extruder_temperature_offset[initial_extruder]} \
#         BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature]
gcode:
  {% if printer.homed_axes != 'XYZ' %}
      G28                                                                  # Home All Axes
  {% endif %}


  # Parameters
  {% set BED = params.BED|int %}
  {% set HOTEND = params.EXTRUDER|int %}
  {% set CHAMBER = params.CHAMBER|default(0)|int %}

  # Constants
  {% set MAXBED = {'X': 120, 'Y': 120, 'Z': 120} %}


  G1 Z20 F3000                                                             # move nozzle away from bed

  M190 S{BED}                                                              # wait for bed temp
  
  # TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={CHAMBER}      # wait for chamber temp
  { action_respond_info("Please verify chamber temperature is at least " + CHAMBER|string + "C")}

  M109 S{EXTRUDER}                                                         # wait for hotend temp

  G28 Z                                                                    # final z homing with hot nozzle

  # BED_MESH_CALIBRATE

  PURGE_LINE

[gcode_macro PURGE_LINE]
gcode:
    G0 X115 Y0.2 Z0.2 F9000       # Move to start position
    G92 E0                        # Reset Extruder
    G1 E5 F300                   # Extrude a little
    G1 X10 E20 F1000              # Draw line
    G92 E0                        # Reset Extruder
    G91                           # relative positioning
    G0 X50 F18000                 # Wipe line 1
    G0 X-40 F18000                # Wipe line 2
    G0 Z10 F1000                  # Raise nozzle
    G90                           # end with absolute positioning
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-1 F3600                ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E30 F240                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F240                    ; extrude a little to soften tip
   G1 E-60 F600                   ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro SPEEDTEST]
gcode:
    {% set fmin = params.FMIN|default(100)|float * 60 %}
    {% set fmax = params.FMAX|default(200)|float * 60 %}
    {% set steps = params.STEPS|default(4)|int %}
    {% set cycles = params.CYCLES|default(1)|int %}

    {% set inset = 20.0|float %}
    {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
    {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
    {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
    {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}
    
    SAVE_GCODE_STATE NAME=speedtest_state
    {% if printer.homed_axes != 'XYZ' %}
      M117 SPEEDTEST: Homing
      G28                                                                  # Home All Axes
    {% endif %}
    G90
        {% for INTERVAL in range(steps) %}
            {% for REPEAT in range(cycles) %}
                {% if fmin == fmax %}
                    {% set feedrate = fmin %}
                {% else %}
                    {% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}
                {% endif %}
                M400 # Wait for queue to empty
                M117 SPEEDTEST: {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                G1 F{feedrate} # set feedrate for the round
                G1 X{minX} Y{minY} # front left
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{maxX} Y{minY + (maxY-minY)/2} # mid right
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{minX} Y{minY} # front left
                G1 X{maxX} Y{maxY} # back right
                G1 X{maxX} Y{minY} # front right
                G1 X{minX} Y{maxY} # back left
            {% endfor %}
        {% endfor %}
    M117
    RESTORE_GCODE_STATE NAME=speedtest_state
